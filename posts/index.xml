<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Arkuna&#39;s nonsense</title>
        <link>https://arkuna.pluteam.site/posts/</link>
        <description>Recent content in Posts on Arkuna&#39;s nonsense</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 14 Aug 2024 21:37:21 +0800</lastBuildDate>
        <atom:link href="https://arkuna.pluteam.site/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>如何构建和运行Vaultwarden</title>
            <link>https://arkuna.pluteam.site/posts/%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%92%8C%E8%BF%90%E8%A1%8Cvaultwarden/</link>
            <pubDate>Wed, 14 Aug 2024 21:37:21 +0800</pubDate>
            
            <guid>https://arkuna.pluteam.site/posts/%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%92%8C%E8%BF%90%E8%A1%8Cvaultwarden/</guid>
            <description>前言 Vaultwarden 是一个用于本地搭建 Bitwarden 服务器的第三方 Docker 项目 Bitwarden是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站</description>
            <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>Vaultwarden 是一个用于本地搭建 Bitwarden 服务器的第三方 Docker 项目
Bitwarden是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站登录凭据）</p>
</blockquote>
<p>因为github现在要求contributor必须开启2FA验证，但是我又不想用1Password之类的付费服务，正好研究下怎样自己托管一个密码管理服务
我这里使用的Linux发行版是Debian12</p>
<h2 id="构建">构建</h2>
<h3 id="配置构建环境">配置构建环境</h3>
<p>配置rust环境，这里因为是国内云服务所以需要用代理</p>
<p>首先安装rustup，这里参考这个<a href="https://github.com/chanchancl/How-to-build-a-develop-environment-for-rust">repo</a></p>
<ol>
<li>
<p>安装所需依赖(sqlite3后端)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo apt install curl build-essential gcc make libssl-dev pkg-config libsqlite3-dev
</span></span></code></pre></div></li>
<li>
<p>下载脚本</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl --proto <span style="color:#e6db74">&#39;=https&#39;</span> --tlsv1.2 https://sh.rustup.rs -sSf &gt; rust.sh <span style="color:#f92672">&amp;&amp;</span> chmod +x rust.sh
</span></span></code></pre></div></li>
<li>
<p>替换下载源</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sed -i <span style="color:#e6db74">&#39;s/${RUSTUP_UPDATE_ROOT:-https:\/\/static.rust-lang.org\/rustup}/https:\/\/mirrors.ustc.edu.cn\/rust-static\/rustup/g&#39;</span> rust.sh
</span></span></code></pre></div></li>
<li>
<p>设置环境变量，加速rustup的下载</p>
<p>这里我使用的是fish shell，编辑配置目录的config.fish并添加以下两行</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fish" data-lang="fish"><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">-gx</span> RUSTUP_DIST_SERVER <span style="color:#e6db74">&#34;https://mirrors.ustc.edu.cn/rust-static&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">-gx</span> RUSTUP_UPDATE_ROOT <span style="color:#e6db74">&#34;https://mirrors.ustc.edu.cn/rust-static/rustup&#34;</span>
</span></span></code></pre></div></li>
<li>
<p>运行安装脚本</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>./rust.sh
</span></span></code></pre></div><p>之后一路回车</p>
</li>
</ol>
<h3 id="编译安装">编译安装</h3>
<ol>
<li>
<p>首先拉取仓库</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git clone https://githubfast.com/dani-garcia/vaultwarden.git
</span></span></code></pre></div></li>
<li>
<p>配置cargo国内镜像源</p>
<p><a href="https://rust-guide.niqin.com/zh-cn/4-cargo/4.1-source-replacement.html">看这个</a>，修改cargo.toml，这里不再赘述</p>
</li>
<li>
<p>构建后端</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>cargo build --features sqlite --release
</span></span></code></pre></div><p>安装</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo install -Dm755 ./target/release/vaultwarden /usr/bin/vaultwarden
</span></span></code></pre></div></li>
</ol>
<h2 id="配置">配置</h2>
<ol>
<li>
<p>创建vaultwarden用户</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo useradd -r -U -s /usr/sbin/nologin vaultwarden
</span></span></code></pre></div></li>
<li>
<p>创建文件夹，设置权限</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo mkdir -p /var/lib/vaultwarden
</span></span><span style="display:flex;"><span>sudo chown -R vaultwarden:vaultwarden /var/lib/vaultwarden
</span></span><span style="display:flex;"><span>sudo chmod <span style="color:#ae81ff">700</span> /var/lib/vaultwarden
</span></span></code></pre></div></li>
<li>
<p>创建<code>.service</code>文件，使用systemd功能</p>
<blockquote>
<p>/etc/systemd/system/vaultwarden.service</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ini" data-lang="ini"><span style="display:flex;"><span><span style="color:#66d9ef">[Unit]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">Description</span><span style="color:#f92672">=</span><span style="color:#e6db74">Bitwarden Server (Rust Edition)</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">Documentation</span><span style="color:#f92672">=</span><span style="color:#e6db74">https://github.com/dani-garcia/vaultwarden</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Only sqlite</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">After</span><span style="color:#f92672">=</span><span style="color:#e6db74">network.target</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">[Service]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">User</span><span style="color:#f92672">=</span><span style="color:#e6db74">vaultwarden</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">Group</span><span style="color:#f92672">=</span><span style="color:#e6db74">vaultwarden</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Use an environment file for configuration.</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">EnvironmentFile</span><span style="color:#f92672">=</span><span style="color:#e6db74">/etc/vaultwarden.env</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># The location of the compiled binary</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ExecStart</span><span style="color:#f92672">=</span><span style="color:#e6db74">/usr/bin/vaultwarden</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set reasonable connection and process limits</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">LimitNOFILE</span><span style="color:#f92672">=</span><span style="color:#e6db74">1048576</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">LimitNPROC</span><span style="color:#f92672">=</span><span style="color:#e6db74">64</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Isolate vaultwarden from the rest of the system</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">PrivateTmp</span><span style="color:#f92672">=</span><span style="color:#e6db74">true</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">PrivateDevices</span><span style="color:#f92672">=</span><span style="color:#e6db74">true</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ProtectHome</span><span style="color:#f92672">=</span><span style="color:#e6db74">true</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ProtectSystem</span><span style="color:#f92672">=</span><span style="color:#e6db74">strict</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Only allow writes to the following directory and set it to the working directory (user and password data are stored here)</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">WorkingDirectory</span><span style="color:#f92672">=</span><span style="color:#e6db74">/var/lib/vaultwarden</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ReadWritePaths</span><span style="color:#f92672">=</span><span style="color:#e6db74">/var/lib/vaultwarden</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">[Install]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">WantedBy</span><span style="color:#f92672">=</span><span style="color:#e6db74">multi-user.target</span>
</span></span></code></pre></div></li>
<li>
<p>编辑配置文件，可以参考<a href="https://github.com/dani-garcia/vaultwarden/blob/main/.env.template">这个</a></p>
<blockquote>
<p>/etc/vaultwarden.env</p>
</blockquote>
<pre tabindex="0"><code>DATA_FOLDER=/var/lib/vaultwarden

# 前端
WEB_VAULT_FOLDER=/var/lib/web-vault
WEB_VAULT_ENABLED=false

DOMAIN=https://&lt;你的域名&gt;
SIGNUPS_ALLOWED=true
</code></pre></li>
<li>
<p>配置前端(web vault) 可选</p>
<p>需要设置<code>WEB_VAULT_ENABLED=true</code>
我这边因为备案原因打不开，就直接用插件不用前端了</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>wget https://gh-proxy.com/https://github.com/dani-garcia/bw_web_builds/releases/download/v2024.6.2b/bw_web_v2024.6.2b.tar.gz
</span></span><span style="display:flex;"><span>sudo tar -zxvf ./bw_web_v2024.6.2b.tar.gz -C /var/lib/
</span></span></code></pre></div></li>
</ol>
<h2 id="运行">运行</h2>
<p>启用systemd服务</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo systemctl daemon-reload
</span></span><span style="display:flex;"><span>sudo systemctl enable --now vaultwarden.service
</span></span></code></pre></div><p>完工</p>
<p>不知道为什么我使用域名没法登录，只能直接使用ip，可能是有什么地方没配好
使用浏览器插件或者是客户端登录使用即可</p>
]]></content>
        </item>
        
        <item>
            <title>我的Neovim配置</title>
            <link>https://arkuna.pluteam.site/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/</link>
            <pubDate>Wed, 24 Jul 2024 20:22:45 +0800</pubDate>
            
            <guid>https://arkuna.pluteam.site/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/</guid>
            <description>我自己正在使用的配置: Github 目前还没在新环境做测试，并且只在Arch Linux这一个发行版上使用，遇到的问题我都会补充在下面 动机 我的工作环境从w</description>
            <content type="html"><![CDATA[<p>我自己正在使用的配置: <a href="https://github.com/arkuna23/nvim_conf">Github</a></p>
<p>目前还没在新环境做测试，并且只在Arch Linux这一个发行版上使用，遇到的问题我都会补充在下面</p>
<h2 id="动机">动机</h2>
<p>我的工作环境从windows迁移到linux有一段时间了，使用习惯逐渐向终端靠拢，正好尝试下neovim这类编辑器</p>
<h2 id="安装">安装</h2>
<p>根据自己的喜好选择安装方式，系统包管理或者是从源码编译，等等，这里不再赘述</p>
<blockquote>
<p>Arch Linux</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>$ sudo pacman -S neovim
</span></span></code></pre></div><h2 id="插件管理">插件管理</h2>
<p>我使用的插件管理器是<a href="https://github.com/folke/lazy.nvim">lazy.nvim</a></p>
<p>之前看到了一个视频，利用lazy.nvim的懒加载将nvim的启动速度提升到了20ms上下，非常的快，于是就有了我的nvim配置重构(之前用的是lazyvim发行版)</p>
<p>基本是直接照着<a href="https://shaobin-jiang.github.io/blog/posts/neovim-startup/">博客</a>的介绍抄的解决方案，但因为我的插件更多一些，所以遇到了一些问题</p>
<h3 id="配置重构与遇到的问题">配置重构与遇到的问题</h3>
<ul>
<li>
<p>nvim-tree插件打开文件浏览器后lualine插件的状态栏被分成了两个</p>
<p><img src="/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/images/2024-07-24-21-02-50.png"></p>
<p>设置<code>vim.o.laststatus = 3</code>即可解决，保证全局只有一个状态栏</p>
</li>
<li>
<p>bufferline插件，主题颜色不生效</p>
<p>我懒得做其他处理了，直接设置bufferline的颜色来修改</p>
<p>主题色</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span><span style="color:#66d9ef">local</span> bufferline_theme <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    normal <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        bg <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;#1e2030&#34;</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    visible <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        bg <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;#0c253c&#34;</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    selected <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        bg <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;#2A3458&#34;</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>在配置函数中自动设定颜色</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span><span style="color:#66d9ef">local</span> highlights <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    fill <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        bg <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>    background <span style="color:#f92672">=</span> bufferline_theme.normal,
</span></span><span style="display:flex;"><span>    indicator_visible <span style="color:#f92672">=</span> bufferline_theme.visible,
</span></span><span style="display:flex;"><span>    separator <span style="color:#f92672">=</span> bufferline_theme.normal,
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> _, v <span style="color:#66d9ef">in</span> ipairs({
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;buffer&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;error&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;numbers&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;close_button&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;diagnostic&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;warning&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;warning_diagnostic&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;error&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;error_diagnostic&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;modified&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;duplicate&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;hint&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;hint_diagnostic&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;info&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;info_diagnostic&#34;</span>,
</span></span><span style="display:flex;"><span>}) <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>    highlights[v] <span style="color:#f92672">=</span> bufferline_theme.normal
</span></span><span style="display:flex;"><span>    highlights[v <span style="color:#f92672">..</span> <span style="color:#e6db74">&#34;_visible&#34;</span>] <span style="color:#f92672">=</span> bufferline_theme.visible
</span></span><span style="display:flex;"><span>    highlights[v <span style="color:#f92672">..</span> <span style="color:#e6db74">&#34;_selected&#34;</span>] <span style="color:#f92672">=</span> bufferline_theme.selected
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">end</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>opts.highlights <span style="color:#f92672">=</span> highlights
</span></span></code></pre></div></li>
</ul>
<h2 id="配置结构">配置结构</h2>
<ul>
<li>lua/config/ 用来存放nvim自身的配置</li>
<li>lua/lib/ 存放工具函数等多次重用的代码</li>
<li>lua/plugins/ 存放插件的配置</li>
</ul>
<h2 id="插件">插件</h2>
<p>像nvim-lspconfig，mason这类插件的基础配置网上很容易查到，这里说我自己的部分配置</p>
<p>lsp，treesitter之类的长一些的配置都在<a href="https://github.com/arkuna23/nvim_conf/blob/main/lua/plugins/conf.lua">lua/plugins/conf.lua</a>中</p>
<h3 id="mason">Mason</h3>
<p>比较核心的插件，用来安装一系列程序(formatter，lsp等)</p>
<h3 id="lsp">LSP</h3>
<p>我这里使用mason-lspconfig插件来自动安装lsp，这个插件可以自动将nvim-lspconfig插件的lsp名称翻译成mason package的名称进行安装</p>
<blockquote>
<p>mason-lspconfig</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lua" data-lang="lua"><span style="display:flex;"><span>opts <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>    ensure_installed <span style="color:#f92672">=</span> table.keys(config.lsp),
</span></span><span style="display:flex;"><span>} <span style="color:#75715e">-- 自动按lsp配置表的键名安装</span>
</span></span></code></pre></div><h3 id="formatter">Formatter</h3>
<p>手动格式化代码太累，用过formatter就再也回不去了，不配不行</p>
<p>我这里使用的格式化插件是<a href="https://github.com/stevearc/conform.nvim">conform.nvim</a>，formatter同样使用mason自动安装</p>
<h2 id="轻量化模块化">轻量化，模块化</h2>
<p>我设定了一个指令用于开关插件启用(<code>TogglePluginsEnabled</code>)，默认是关闭的，执行指令后才会启用lazy.nvim和所有的插件</p>
<p>接下来还有把插件进行细分，之后可选安装的打算</p>
<h2 id="成果">成果</h2>
<p><img alt="dashboard" src="/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/images/2024-07-24-21-54-13.png"></p>
<p><img alt="cmp" src="/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/images/2024-07-24-21-55-20.png"></p>
<p><img alt="telescope" src="/posts/%E6%88%91%E7%9A%84neovim%E9%85%8D%E7%BD%AE/images/2024-07-24-21-56-01.png"></p>
<p>究极电子积木，可自定义程度太高，对我来说不少场景已经可以代替vscode</p>
]]></content>
        </item>
        
    </channel>
</rss>
